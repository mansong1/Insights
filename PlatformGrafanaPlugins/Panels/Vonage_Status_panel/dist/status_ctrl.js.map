{"version":3,"sources":["../src/status_ctrl.js"],"names":["MetricsPanelCtrl","_","TimeSeries","coreModule","kbn","moment","panelDefaults","flipCard","flipTime","colorMode","colors","crit","warn","ok","disable","isGrayOnNoData","isIgnoreOKColors","isHideAlertsOnDisable","cornerRadius","isAutoScrollOnOverflow","StatusPluginCtrl","$scope","$injector","$log","$filter","annotationsSrv","defaultsDeep","panel","filter","valueHandlers","aggregations","displayTypes","displayAliasTypes","displayValueTypes","colorModes","fontFormats","measurementArray","previousQuery","each","targets","t","valueHandler","Date","length","inSightsStatusData","events","on","onRender","bind","postRefresh","onDataError","onDataReceived","onInitEditMode","onColorChange","addFilters","numberOrTextFilter","input","angular","isNumber","$stateful","textRegex","regex","RegExp","e","matchResults","match","fixedSpan","span","target","i","series","obj","Object","assign","push","measurements","duplicates","measurement","hide","m","res","alias","addEditorTab","unitFormats","getUnitFormats","subItem","units","value","render","panelHeaderHeight","title","$panelContainer","find","css","$panelContoller","height","minHeight","tail","panelWidth","innerWidth","isNaN","parseInt","slice","maxWidth","element","overflowY","offsetHeight","scrollHeight","Number","undefined","String","c","w","getTime","item","color","fixPanelHeader","setElementHeight","setTextMaxWidth","upgradeOldVersion","clusterName","displayName","replace","namePrefix","addClass","removeClass","disabled","display","annotation","extraMoreAlerts","s","datapoints","showcase","url","isDisplayValue","displayType","valueDisplayRegex","validateRegex","str","aggregation","max","point","stats","min","diff","total","avg","toString","display_value","handleThresholdStatus","handleDisabledStatus","handleTextOnly","autoFlip","updatePanelState","handleCssDisplay","parseUri","handleMaxAlertsToShow","displayAliasType","displayValueWithAlias","isFloat","thresholds","parseThresholds","inverted","isCritical","isWarning","isCheckRanges","warnIsNumber","critIsNumber","formatDisplayValue","displayValueWhenAliasDisplayed","displayValueFromWarning","displayValueFromCritical","isFinite","decimals","decimalPlaces","Math","valueFormats","date","dashboard","isTimezoneUtc","utc","format","dateFormat","num","disabledValue","panelState","radius","okColor","maxAlertNumber","currentMaxAllowedAlerts","filteredOutAlerts","arrayNamesToSlice","forEach","originAlertCount","arrayName","links","link","type","uri","dashUri","params","targetBlank","dataList","map","seriesHandler","timeoutId","clearInterval","setInterval","toggleClass","scope","elem","attrs","ctrl","metricOptions","parseFloat","valueOf","val","toLowerCase","indexOf","seriesData","flotpairs","getFlotPairs","templateUrl"],"mappings":"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","file":"status_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from \"app/plugins/sdk\";\nimport _ from \"lodash\";\nimport TimeSeries from \"app/core/time_series2\";\nimport coreModule from \"app/core/core_module\";\nimport kbn from \"app/core/utils/kbn\";\nimport moment from \"moment\";\n\nimport './css/status_panel.css!';\n\n/*\t\n\tAdded / Removed Code on top of grafana status panel code - is mention where extra code changes have been done to support Neo4j Datasource requirements.\t\n*/\n\n\n\n// Set and populate panel defaults\nconst panelDefaults = {\n\tflipCard: false,\n\tflipTime: 5,\n\tcolorMode: 'Panel',\n\t// Changed colors to match Table Panel so colorised text is easier to read\n\tcolors: {\n\t\tcrit: 'rgba(245, 54, 54, 0.9)',\n\t\twarn: 'rgba(237, 129, 40, 0.9)',\n\t\tok: 'rgba(50, 128, 45, 0.9)',\n\t\tdisable: 'rgba(128, 128, 128, 0.9)'\n\t},\n\tisGrayOnNoData: false,\n\tisIgnoreOKColors: false,\n\tisHideAlertsOnDisable: false,\n\tcornerRadius: 0,\n\tisAutoScrollOnOverflow: false\n};\n\nexport class StatusPluginCtrl extends MetricsPanelCtrl {\n\t/** @ngInject */\n\tconstructor($scope, $injector, $log, $filter, annotationsSrv) {\n\t\tsuper($scope, $injector);\n\t\t_.defaultsDeep(this.panel, panelDefaults);\n\n\t\t//this.log = $log.debug;\n\t\tthis.filter = $filter;\n\n\t\tthis.valueHandlers = ['Number Threshold', 'String Threshold', 'Date Threshold', 'Disable Criteria', 'Text Only'];\n\t\tthis.aggregations = ['Last', 'First', 'Max', 'Min', 'Sum', 'Avg', 'Delta', 'All'];\n\t\tthis.displayTypes = ['Regular', 'Annotation'];\n\t\tthis.displayAliasTypes = ['Warning / Critical', 'Always'];\n\t\tthis.displayValueTypes = ['Never', 'When Alias Displayed', 'Warning / Critical', 'Critical Only'];\n\t\tthis.colorModes = ['Panel', 'Metric', 'Disabled'];\n\t\tthis.fontFormats = ['Regular', 'Bold', 'Italic'];\n\t\t\n\t\t/*\tAdded Code on top of grafana status panel code.\t*/\n\t\tthis.measurementArray = [];\n\t\tthis.previousQuery = '';\n\t\t/*\tAdded Code on top of grafana status panel code.\t*/\n\n\t\t// Dates get stored as strings and will need to be converted back to a Date objects\n\t\t_.each(this.panel.targets, (t) => {\n\t\t\tif (t.valueHandler === \"Date Threshold\") {\n\t\t\t\tif (typeof t.crit != \"undefined\") t.crit = new Date(t.crit);\n\t\t\t\tif (typeof t.warn != \"undefined\") t.warn = new Date(t.warn);\n\t\t\t}\n\t\t});\n\n\t\tthis.panel.flipTime = this.panel.flipTime || 5;\n\t\t\n\t\t/*\tAdded Code on top of grafana status panel code.\t*/\n\t\tif(this.measurementArray.length == 0)\n\t\t{\n\t\t\tif(\"inSightsStatusData\" in this.panel && this.panel.inSightsStatusData.length > 0)\n\t\t\t{\n\t\t\t\tthis.measurementArray = this.panel.inSightsStatusData;\n\t\t\t}\n\t\t}\n\t\t/*\tAdded Code on top of grafana status panel code.\t*/\n\n\t\t/** Bind events to functions **/\n\t\tthis.events.on('render', this.onRender.bind(this));\n\t\tthis.events.on('refresh', this.postRefresh.bind(this));\n\t\tthis.events.on('data-error', this.onDataError.bind(this));\n\t\tthis.events.on('data-received', this.onDataReceived.bind(this));\n\t\tthis.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n\t\tthis.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n\n\t\tthis.onColorChange = this.onColorChange.bind(this);\n\n\t\tthis.addFilters()\n\t}\n\n\taddFilters() {\n\t\tcoreModule.filter('numberOrText', () => {\n\t\t\tlet numberOrTextFilter = (input) => {\n\t\t\t\tif(angular.isNumber(input)) {\n\t\t\t\t\treturn this.filter('number')(input);\n\t\t\t\t} else {\n\t\t\t\t\treturn input;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tnumberOrTextFilter.$stateful = true;\n\t\t\treturn numberOrTextFilter;\n\t\t});\n\n\t\tcoreModule.filter('numberOrTextWithRegex', () => {\n\t\t\tlet numberOrTextFilter = (input, textRegex) => {\n\t\t\t\tif(angular.isNumber(input)) {\n\t\t\t\t\treturn this.filter('number')(input);\n\t\t\t\t} else {\n\t\t\t\t\tif(textRegex == null || textRegex.length == 0) {\n\t\t\t\t\t\treturn input;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet regex;\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tregex = new RegExp(textRegex);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\treturn input;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!input) {\n\t\t\t\t\t\t\treturn input;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet matchResults = input.match(regex);\n\t\t\t\t\t\tif (matchResults == null) {\n\t\t\t\t\t\t\treturn input;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn matchResults[0];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tnumberOrTextFilter.$stateful = true;\n\t\t\treturn numberOrTextFilter;\n\t\t});\n\t}\n\n\tpostRefresh() {\n\t\tif (this.panel.fixedSpan) {\n\t\t\tthis.panel.span = this.panel.fixedSpan;\n\t\t}\n\t\t/*\tAdded Code on top of grafana status panel code.\t*/\n\t\t//\tChecking weather query is modified or not.\n\t\tif(this.panel.targets.length == 1 && this.previousQuery != '')\n\t\t{\n\t\t\tif(this.previousQuery != this.panel.targets[0].target)\n\t\t\t{\n\t\t\t\tthis.measurementArray = [];\n\t\t\t\tthis.panel.inSightsStatusData = [];\n\t\t\t}\n\t\t}\n\t\tif(this.panel.targets.length == 1 && this.measurementArray.length == 0)\n\t\t{\n\t\t\tfor(let i = 0; i < this.series.length; i++) \n\t\t\t{\n\t\t\t\tvar obj = Object.assign(this.series[i], this.panel.targets[0]);\n\t\t\t\tthis.measurementArray.push(obj); \n\t\t\t}\n\t\t}\n\t\t//\tAssigning the query to static variable to check modification of query in next iteration.\n\t\tif(this.panel.targets.length == 1)\n\t\t{\n\t\t\tthis.previousQuery = this.panel.targets[0].target;\n\t\t}\n\t\tthis.measurements = this.measurementArray;\n\t\t/*\tAdded Code on top of grafana status panel code.\t*/\n\t\t\n\t\t\n\t\t/** Duplicate alias validation **/\n\t\tthis.duplicates = false;\n\n\t\tthis.measurements = _.filter(this.measurements, (measurement) => {\n\t\t\treturn !measurement.hide;\n\t\t});\n\n\t\t_.each(this.measurements, (m) => {\n\t\t\tlet res = _.filter(this.measurements, (measurement) => {\n\t\t\t\t\n\t\t\t\t/*\tRemoved Code on top of grafana status panel code.\t*/\n\t\t\t\treturn (m.alias == measurement.alias) && !m.hide;\n\t\t\t\t/*\tRemoved Code on top of grafana status panel code.\t*/\n\t\t\t\t\n\t\t\t\t\n\t\t\t});\n\n\t\t\tif (res.length > 1) {\n\t\t\t\tthis.duplicates = true;\n\t\t\t}\n\t\t});\n\t}\n\n\tonInitEditMode() {\n\t\tthis.addEditorTab('Options', 'public/plugins/vonage-status-panel/editor.html', 2);\n\t\t// Load in the supported units-of-measure formats so they can be displayed in the editor\n\t\tthis.unitFormats = kbn.getUnitFormats();\n\t}\n\n\tsetUnitFormat(measurement, subItem) {\n\t\tmeasurement.units = subItem.value;\n\t\tthis.render();\n\t}\n\n\tfixPanelHeader() {\n\t\t// Handle the panel top menu height, since it's display doesn't look good with the panel\n\t\tlet panelHeaderHeight = '';\n\t\tif(this.panel.title.length === 0) {\n\t\t\tpanelHeaderHeight = '10px';\n\t\t}\n\t\tthis.$panelContainer.find('.panel-header').css('height', panelHeaderHeight);\n\t\tthis.$panelContainer.find('.panel-menu-container').css('height', panelHeaderHeight);\n\t\tthis.$panelContainer.find('.fa-caret-down').css('display', 'none');\n\t}\n\n\tsetElementHeight() {\n\t\t// Handle the panel height\n\t\tthis.$panelContainer.find('.status-panel').css('min-height', this.$panelContoller.height + 'px');\n\t\tthis.minHeight = this.$panelContoller.height-10;\n\t}\n\n\tsetTextMaxWidth() {\n\t\tlet tail = ' …';\n\t\tlet panelWidth = this.$panelContainer.innerWidth();\n\t\tif (isNaN(panelWidth))\n\t\t\tpanelWidth = parseInt(panelWidth.slice(0, -2), 10) / 12;\n\t\tpanelWidth = panelWidth - 20;\n\t\tthis.maxWidth = panelWidth;\n\t}\n\n\tisAutoScrollAlerts() {\n\t\tif(!this.panel.isAutoScrollOnOverflow) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet element = this.$panelContainer.find('.status-panel')[0];\n\t\tlet overflowY = element.offsetHeight < element.scrollHeight;\n\t\treturn overflowY;\n\t}\n\n\tonHandlerChange(measurement) {\n\t\t// If the Threshold type changes between Number/String/Date then try and recast the thresholds to keep consistent\n\t\tif (measurement.valueHandler === \"Number Threshold\") {\n\t\t\tmeasurement.crit = (isNaN(Number(measurement.crit))) ? undefined : Number(measurement.crit);\n\t\t\tmeasurement.warn = (isNaN(Number(measurement.warn))) ? undefined : Number(measurement.warn);\n\t\t} else if (measurement.valueHandler === \"String Threshold\") {\n\t\t\tif (typeof measurement.crit != \"undefined\") measurement.crit = String(measurement.crit);\n\t\t\tif (typeof measurement.warn != \"undefined\") measurement.warn = String(measurement.warn);\n\t\t} else if (measurement.valueHandler === \"Date Threshold\") {\n\t\t\tlet c = new Date(measurement.crit), w = new Date(measurement.warn);\n\t\t\tmeasurement.crit = (isNaN(c.getTime())) ? undefined : c;\n\t\t\tmeasurement.warn = (isNaN(w.getTime())) ? undefined : w;\n\t\t}\n\t\tthis.onRender();\n\t}\n\n\tonColorChange(item) {\n\t\treturn (color) => {\n\t\t\tthis.panel.colors[item] = color;\n\t\t\tthis.render();\n\t\t};\n\t}\n\n\tonRender() {\n\t\tthis.fixPanelHeader();\n\t\tthis.setElementHeight();\n\t\tthis.setTextMaxWidth();\n\t\tthis.upgradeOldVersion();\n\n\t\tif (this.panel.clusterName) {\n\t\t\tthis.panel.displayName =\n\t\t\t\tthis.filter('interpolateTemplateVars')(this.panel.clusterName, this.$scope)\n\t\t\t\t\t.replace(new RegExp(this.panel.namePrefix, 'i'), '');\n\t\t} else {\n\t\t\tthis.panel.displayName = \"\";\n\t\t}\n\n\t\tif(this.panel.flipCard){\n\t\t\tthis.$panelContainer.addClass(\"effect-hover\");\n\t\t} else {\n\t\t\tthis.$panelContainer.removeClass(\"effect-hover\");\n\t\t}\n\t\t\n\t\t\n\t\t/*\tAdded Code on top of grafana status panel code.\t*/\n\t\tlet targets = [];\n\t\tthis.measurements = this.measurementArray;\n\t\tif(this.measurements.length > 0)\n\t\t{\n\t\t\ttargets = this.measurements;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttargets = this.panel.targets;\n\t\t}\n\t\tthis.inSightsStatusData = this.measurements;\n\t\tif (\"inSightsStatusData\" in this.panel && this.panel.inSightsStatusData.length > 0)\n\t\t{\n\t\t\tthis.inSightsStatusData = this.panel.inSightsStatusData;\n\t\t}\n\t\telse \n\t\t{\n\t\t\t//this.inSightsStatusData = [];\n\t\t\tthis.panel.inSightsStatusData = this.inSightsStatusData;\n\t\t}\n\t\t//let targets = this.panel.targets;\n\t\t/*\tAdded Code on top of grafana status panel code.\t*/\n\t\t\n\t\t\n\t\t\n\t\tthis.crit = [];\n\t\tthis.warn = [];\n\t\tthis.disabled = [];\n\t\tthis.display = [];\n\t\tthis.annotation = [];\n\t\tthis.extraMoreAlerts = null;\n\n\t\t_.each(this.series, (s) => {\n\t\t\tif (s.datapoints.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet target = _.find(targets, (target) => {\n\t\t\t\treturn target.alias == s.alias || target.target == s.alias;\n\t\t\t});\n\n\t\t\tif (!target) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ts.alias = target.alias;\n\t\t\t\n\t\t\t/*\tAdded Code on top of grafana status panel code.\t*/\n\t\t\ts.showcase = target.showcase;\n\t\t\t/*\tAdded Code on top of grafana status panel code.\t*/\n\t\t\t\n\t\t\ts.url = target.url;\n\t\t\ts.isDisplayValue = true;\n\t\t\ts.displayType = target.displayType;\n\t\t\ts.valueDisplayRegex = \"\";\n\n\t\t\tif(this.validateRegex(target.valueDisplayRegex)) {\n\t\t\t\ts.valueDisplayRegex = target.valueDisplayRegex;\n\t\t\t}\n\n\t\t\tlet value;\n\t\t\tlet str;\n\t\t\tswitch (target.aggregation) {\n\t\t\t\tcase 'Max':\n\t\t\t\t\tvalue = _.max(s.datapoints, (point) => { return point[0]; })[0];\n\t\t\t\t\tvalue = s.stats.max;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Min':\n\t\t\t\t\tvalue = _.min(s.datapoints, (point) => { return point[0]; })[0];\n\t\t\t\t\tvalue = s.stats.min;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Delta':\n\t\t\t\t\tvalue = s.datapoints[s.datapoints.length - 1][0] - s.datapoints[0][0];\n\t\t\t\t\tvalue = s.stats.diff;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Sum':\n\t\t\t\t\tvalue = 0;\n\t\t\t\t\t_.each(s.datapoints, (point) => { value += point[0] });\n\t\t\t\t\tvalue = s.stats.total;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Avg':\n\t\t\t\t\tvalue = s.stats.avg;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'First':\n\t\t\t\t\tvalue = s.datapoints[0][0];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'All':\n\t\t\t\t\t//value = s.datapoints[0][0];\n\t\t\t\t\tstr = '';\n\t\t\t\t\t_.each(s.datapoints, (point) => \n\t\t\t\t\t{ \n\t\t\t\t\t\tstr = str + \" \\n\" + (point[0]).toString();\n\t\t\t\t\t});\n\t\t\t\t\tvalue = str;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tvalue = s.datapoints[s.datapoints.length - 1][0];\n\t\t\t}\n\n\t\t\ts.display_value = value;\n\n\t\t\tif (target.valueHandler == \"Number Threshold\" ||\n\t\t\t\ttarget.valueHandler == \"String Threshold\" ||\n\t\t\t\ttarget.valueHandler == \"Date Threshold\") {\n\t\t\t\tthis.handleThresholdStatus(s, target);\n\t\t\t}\n\t\t\telse if (target.valueHandler == \"Disable Criteria\") {\n\t\t\t\tthis.handleDisabledStatus(s,target);\n\t\t\t}\n\t\t\telse if (target.valueHandler == \"Text Only\") {\n\t\t\t\tthis.handleTextOnly(s, target);\n\t\t\t}\n\t\t});\n\n\t\tif(this.panel.isHideAlertsOnDisable && this.disabled.length > 0) {\n\t\t\tthis.crit = [];\n\t\t\tthis.warn = [];\n\t\t\tthis.display = [];\n\t\t}\n\n\t\tthis.autoFlip();\n\t\tthis.updatePanelState();\n\t\tthis.handleCssDisplay();\n\t\tthis.parseUri();\n\n\t\t//This must appear after handling the css style of the panel\n\t\tthis.handleMaxAlertsToShow();\n\t}\n\n\tupgradeOldVersion() {\n\t\tlet targets = this.panel.targets;\n\n\t\t//Handle legacy code\n\t\t_.each(targets, (target) => {\n\t\t\tif(target.valueHandler == null) {\n\t\t\t\tif(target.displayType != null) {\n\t\t\t\t\ttarget.valueHandler = target.displayType;\n\t\t\t\t\tif (target.valueHandler == \"Annotation\") {\n\t\t\t\t\t\ttarget.valueHandler = \"Text Only\"\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttarget.valueHandler = this.valueHandlers[0]\n\t\t\t\t}\n\t\t\t\ttarget.displayType = this.displayTypes[0];\n\t\t\t}\n\n\t\t\tif(target.display != null){\n\t\t\t\ttarget.displayAliasType = target.display ? \"Always\" : this.displayAliasTypes[0];\n\t\t\t\ttarget.displayValueWithAlias = target.display ? 'When Alias Displayed' : this.displayValueTypes[0];\n\t\t\t\tdelete target.display;\n\n\t\t\t}\n\t\t});\n\n\t\t// Depreciate Threshold in favour of Type specific versions\n\t\t_.each(targets, (target) => {\n\t\t\tif (target.valueHandler === \"Threshold\") {\n\t\t\t\t// Use the same logic as Threshold Parsing to ensure we retain same behaviour\n\t\t\t\t// i.e. map to Number Threshold if two floats (i.e. range check) otherwise map to String Threshold (i.e. exact match)\n\t\t\t\tif (StatusPluginCtrl.isFloat(target.crit) && StatusPluginCtrl.isFloat(target.warn)) {\n\t\t\t\t\ttarget.valueHandler = \"Number Threshold\"\n\t\t\t\t\ttarget.crit = Number(target.crit);\n\t\t\t\t\ttarget.warn = Number(target.warn);\n\t\t\t\t} else {\n\t\t\t\t\ttarget.valueHandler = \"String Threshold\"\n\t\t\t\t\tif (typeof target.crit != \"undefined\") target.crit = String(target.crit);\n\t\t\t\t\tif (typeof target.warn != \"undefined\") target.warn = String(target.warn);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\thandleThresholdStatus(series, target) {\n\t\tseries.thresholds = StatusPluginCtrl.parseThresholds(target);\n\t\tseries.inverted = series.thresholds.crit < series.thresholds.warn;\n\n\t\tlet isCritical = false;\n\t\tlet isWarning = false;\n\t\tlet isCheckRanges = series.thresholds.warnIsNumber && series.thresholds.critIsNumber;\n\t\tif (isCheckRanges) {\n\t\t\tif (!series.inverted) {\n\t\t\t\tif (series.display_value >= series.thresholds.crit) {\n\t\t\t\t\tisCritical = true\n\t\t\t\t} else if (series.display_value >= series.thresholds.warn) {\n\t\t\t\t\tisWarning = true\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (series.display_value <= series.thresholds.crit) {\n\t\t\t\t\tisCritical = true\n\t\t\t\t} else if (series.display_value <= series.thresholds.warn) {\n\t\t\t\t\tisWarning = true\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (series.display_value == series.thresholds.crit) {\n\t\t\t\tisCritical = true\n\t\t\t} else if (series.display_value == series.thresholds.warn) {\n\t\t\t\tisWarning = true\n\t\t\t}\n\t\t}\n\n\t\t// Add units-of-measure and decimal formatting or date formatting as needed\n\t\tseries.display_value = this.formatDisplayValue(series.display_value, target);\n\n\t\tlet displayValueWhenAliasDisplayed = 'When Alias Displayed' === target.displayValueWithAlias;\n\t\tlet displayValueFromWarning = 'Warning / Critical' === target.displayValueWithAlias;\n\t\tlet displayValueFromCritical = 'Critical Only' === target.displayValueWithAlias;\n\n\t\tif(isCritical) {\n\t\t\t//In critical state we don't show the error as annotation\n\t\t\tseries.displayType = this.displayTypes[0];\n\t\t\tseries.isDisplayValue = displayValueWhenAliasDisplayed || displayValueFromWarning || displayValueFromCritical;\n\t\t\tthis.crit.push(series);\n\t\t} else if(isWarning) {\n\t\t\t//In warning state we don't show the warning as annotation\n\t\t\tseries.displayType = this.displayTypes[0];\n\t\t\tseries.isDisplayValue = displayValueWhenAliasDisplayed || displayValueFromWarning;\n\t\t\tthis.warn.push(series);\n\t\t} else if (\"Always\" == target.displayAliasType) {\n\t\t\tseries.isDisplayValue = displayValueWhenAliasDisplayed;\n\t\t\tif(series.displayType == \"Annotation\") {\n\t\t\t\tthis.annotation.push(series);\n\t\t\t} else {\n\t\t\t\tthis.display.push(series);\n\t\t\t}\n\t\t}\n\t}\n\n\tformatDisplayValue(value, target) {\n\t\t// Format the display value. Set to \"Invalid\" if value is out-of-bounds or a type mismatch with the handler\n\t\tif (target.valueHandler === \"Number Threshold\") {\n\t\t\tif (_.isFinite(value)) {\n\t\t\t\tlet units = (typeof target.units === \"string\") ? target.units : 'none';\n\t\t\t\tlet decimals = this.decimalPlaces(value);\n\t\t\t\t// We define the decimal percision by the minimal decimal needed\n\t\t\t\tdecimals = (typeof target.decimals === \"number\") ? Math.min(target.decimals, decimals) : decimals;\n\t\t\t\tvalue = kbn.valueFormats[units](value, decimals, null);\n\t\t\t} else {\n\t\t\t\tvalue = \"Invalid Number\";\n\t\t\t}\n\t\t} else if (target.valueHandler === \"String Threshold\") {\n\t\t\tif (value === undefined || value === null || value !== value)\n\t\t\t\tvalue = \"Invalid String\";\n\t\t} else if (target.valueHandler === \"Date Threshold\") {\n\t\t\tif (_.isFinite(value)) {\n\t\t\t\tlet date = moment(new Date(value));\n\t\t\t\tif (this.dashboard.isTimezoneUtc()) date = date.utc();\n\t\t\t\tvalue = date.format(target.dateFormat);\n\t\t\t} else {\n\t\t\t\tvalue = \"Invalid Date\";\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n\n\tdecimalPlaces(num) {\n\t\tvar match = (''+num).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n\t\tif (!match) { return 0; }\n\t\treturn Math.max(\n\t\t\t0,\n\t\t\t// Number of digits right of decimal point.\n\t\t\t(match[1] ? match[1].length : 0)\n\t\t\t// Adjust for scientific notation.\n\t\t\t- (match[2] ? +match[2] : 0));\n\t}\n\n\thandleDisabledStatus(series, target) {\n\t\tseries.displayType = this.displayTypes[0];\n\t\tseries.disabledValue = target.disabledValue;\n\n\t\tif (series.display_value == series.disabledValue) {\n\t\t\tthis.disabled.push(series);\n\t\t}\n\t}\n\n\thandleTextOnly(series, target) {\n\t\tif(series.displayType == \"Annotation\") {\n\t\t\tthis.annotation.push(series);\n\t\t} else {\n\t\t\tthis.display.push(series);\n\t\t}\n\t}\n\n\tupdatePanelState() {\n\t\tif(this.duplicates) {\n\t\t\tthis.panelState = 'error-state';\n\t\t} else if (this.disabled.length > 0) {\n\t\t\tthis.panelState = 'disabled-state';\n\t\t} else if (this.crit.length > 0) {\n\t\t\tthis.panelState = 'error-state';\n\t\t} else if (this.warn.length > 0) {\n\t\t\tthis.panelState = 'warn-state';\n\t\t} else if((this.series == undefined || this.series.length == 0) && this.panel.isGrayOnNoData) {\n\t\t\tthis.panelState = 'no-data-state';\n\t\t} else {\n\t\t\tthis.panelState = 'ok-state';\n\t\t}\n\t}\n\n\thandleCssDisplay() {\n\t\tthis.$panelContainer.removeClass('error-state warn-state disabled-state ok-state no-data-state');\n\t\tthis.$panelContainer.addClass(this.panelState);\n\n\t\tlet radius = _.isNumber(this.panel.cornerRadius) ? this.panel.cornerRadius : 0\n\t\tthis.$panelContainer.css('border-radius', radius + '%');\n\n\t\tlet okColor = (this.panel.isIgnoreOKColors) ? '' : this.panel.colors.ok;\n\n\t\tif (this.panel.colorMode === \"Panel\") {\n\t\t\tswitch(this.panelState) {\n\t\t\t\tcase 'disabled-state': this.$panelContainer.css('background-color', this.panel.colors.disable); break;\n\t\t\t\tcase 'error-state': this.$panelContainer.css('background-color', this.panel.colors.crit); break;\n\t\t\t\tcase 'warn-state': this.$panelContainer.css('background-color', this.panel.colors.warn); break;\n\t\t\t\tcase 'no-data-state': this.$panelContainer.css('background-color', this.panel.colors.disable); break;\n\t\t\t\tdefault: this.$panelContainer.css('background-color', okColor); break;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.$panelContainer.css('background-color', '');\n\t\t}\n\t}\n\n\thandleMaxAlertsToShow() {\n\t\tif(this.panel.maxAlertNumber != null && this.panel.maxAlertNumber >= 0) {\n\t\t\tlet currentMaxAllowedAlerts = this.panel.maxAlertNumber;\n\t\t\tlet filteredOutAlerts = 0;\n\t\t\tlet arrayNamesToSlice = [\"disabled\", \"crit\", \"warn\", \"display\"];\n\t\t\tarrayNamesToSlice.forEach( arrayName => {\n\t\t\t\tlet originAlertCount = this[arrayName].length;\n\t\t\t\tthis[arrayName] = this[arrayName].slice(0,currentMaxAllowedAlerts);\n\t\t\t\tcurrentMaxAllowedAlerts = Math.max(currentMaxAllowedAlerts - this[arrayName].length, 0);\n\t\t\t\tfilteredOutAlerts += (originAlertCount - this[arrayName].length);\n\t\t\t});\n\n\t\t\tif(filteredOutAlerts > 0) {\n\t\t\t\tthis.extraMoreAlerts = \"+ \" + filteredOutAlerts + \" more\"\n\t\t\t}\n\t\t}\n\t}\n\n\tparseUri() {\n\t\tif (this.panel.links && this.panel.links.length > 0) {\n\t\t\tlet link = this.panel.links[0];\n\n\t\t\tif (link.type == \"absolute\") {\n\t\t\t\tthis.uri = link.url;\n\t\t\t} else {\n\t\t\t\tthis.uri = 'dashboard/' + link.dashUri;\n\t\t\t}\n\n\t\t\tif (link.params) {\n\t\t\t\tthis.uri +=  \"?\" + link.params;\n\t\t\t}\n\n\t\t\tthis.targetBlank = link.targetBlank;\n\t\t} else {\n\t\t\tthis.uri = undefined;\n\t\t}\n\t}\n\n\tvalidateRegex(textRegex) {\n\t\tif(textRegex == null || textRegex.length == 0) {\n\t\t\treturn true\n\t\t}\n\t\ttry {\n\t\t\tlet regex = new RegExp(textRegex);\n\t\t\treturn true\n\t\t} catch(e) {\n\t\t\treturn false\n\t\t}\n\t}\n\n\tstatic parseThresholds(metricOptions) {\n\t\tlet res = {};\n\n\t\tif (StatusPluginCtrl.isFloat(metricOptions.warn)) {\n\t\t\tres.warn = parseFloat(metricOptions.warn);\n\t\t\tres.warnIsNumber = true;\n\t\t} else if (metricOptions.warn instanceof Date) {\n\t\t\t// Convert Dates to Numbers and leverage existing threshold logic\n\t\t\tres.warn = metricOptions.warn.valueOf();\n\t\t\tres.warnIsNumber = true;\n\t\t} else {\n\t\t\tres.warn = metricOptions.warn;\n\t\t\tres.warnIsNumber = false;\n\t\t}\n\n\t\tif (StatusPluginCtrl.isFloat(metricOptions.crit)) {\n\t\t\tres.crit = parseFloat(metricOptions.crit);\n\t\t\tres.critIsNumber = true;\n\t\t} else if (metricOptions.crit instanceof Date) {\n\t\t\tres.crit = metricOptions.crit.valueOf();\n\t\t\tres.critIsNumber = true;\n\t\t} else {\n\t\t\tres.crit = metricOptions.crit;\n\t\t\tres.critIsNumber = false;\n\t\t}\n\n\t\treturn res;\n\t}\n\n\tstatic isFloat(val) {\n\t\tif (!isNaN(val) && val.toString().toLowerCase().indexOf('e') == -1) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tonDataReceived(dataList) {\n\t\tthis.series = dataList.map(StatusPluginCtrl.seriesHandler.bind(this));\n\t\tthis.render();\n\t}\n\n\tonDataError() {\n\t\tthis.crit = [];\n\t\tthis.warn = [];\n\t}\n\n\tstatic seriesHandler(seriesData) {\n\t\tvar series = new TimeSeries({\n\t\t\tdatapoints: seriesData.datapoints,\n\t\t\talias: seriesData.target\n\t\t});\n\n\t\tseries.flotpairs = series.getFlotPairs(\"connected\");\n\n\t\treturn series;\n\t}\n\n\t$onDestroy() {\n\t\tif(this.timeoutId) clearInterval(this.timeoutId);\n\t}\n\n\tautoFlip() {\n\t\tif (this.timeoutId) clearInterval(this.timeoutId);\n\t\tif (this.panel.flipCard && (this.crit.length > 0 || this.warn.length > 0 || this.disabled.length > 0)) {\n\t\t\tthis.timeoutId = setInterval(() => {\n\t\t\t\tthis.$panelContainer.toggleClass(\"flipped\");\n\t\t\t}, this.panel.flipTime * 1000);\n\t\t}\n\t}\n\n\tlink(scope, elem, attrs, ctrl) {\n\t\tthis.$panelContainer = elem.find('.panel-container');\n\t\tthis.$panelContainer.addClass(\"st-card\");\n\t\tthis.$panelContoller = ctrl;\n\t}\n}\n\nStatusPluginCtrl.templateUrl = 'module.html';"]}